#include <iostream>
#include <cstdlib>
using namespace std;

// Fungsi untuk menampilkan papan permainan Tic Tac Toe
void displayBoard(char board[3][3])
{
    cout << "-------------" << endl;
    for (int i = 0; i < 3; ++i)
    {
        cout << "| ";
        for (int j = 0; j < 3; ++j)
        {
            cout << board[i][j] << " | ";
        }
        cout << endl
             << "-------------" << endl;
    }
}

// Fungsi untuk memeriksa apakah ada pemenang
bool checkWinner(char board[3][3])
{
    // Memeriksa baris dan kolom
    for (int i = 0; i < 3; ++i)
    {
        if ((board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ') ||
            (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' '))
        {
            return true; // Terdapat pemenang pada baris atau kolom
        }
    }

    // Memeriksa diagonal
    if ((board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ') ||
        (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' '))
    {
        return true; // Terdapat pemenang pada diagonal
    }

    return false; // Tidak ada pemenang
}

// Fungsi untuk memeriksa apakah terdapat celah kosong pada papan
bool checkEmpty(char board[3][3])
{
    for (int i = 0; i < 3; ++i)
    {
        for (int j = 0; j < 3; ++j)
        {
            if (board[i][j] == ' ')
            {
                return true; // Masih terdapat celah kosong
            }
        }
    }
    return false; // Tidak ada celah kosong
}

// Fungsi utama untuk menjalankan permainan
int main()
{
    char board[3][3] = {{' ', ' ', ' '},
                        {' ', ' ', ' '},
                        {' ', ' ', ' '}};

    int row, col;
    char currentPlayer = 'X';

    do
    {
        // Menampilkan papan permainan
        displayBoard(board);

        // Meminta input baris dan kolom dari pemain
        cout << "Player " << currentPlayer << ", enter your move (row and column): ";
        cin >> row >> col;

        // Memeriksa apakah input valid
        if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != ' ')
        {
            cout << "Invalid move. Try again." << endl;
            continue;
        }

        // Menyimpan langkah pemain pada papan
        board[row][col] = currentPlayer;

        // Memeriksa apakah pemain saat ini menang
        if (checkWinner(board))
        {
            displayBoard(board);
            cout << "Player " << currentPlayer << " wins! Congratulations!" << endl;
            break;
        }

        // Memeriksa apakah terdapat celah kosong
        if (!checkEmpty(board))
        {
            displayBoard(board);
            cout << "It's a draw! The game is over." << endl;
            break;
        }

        // Gantian giliran pemain
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';

    } while (true);

    return 0;
}
